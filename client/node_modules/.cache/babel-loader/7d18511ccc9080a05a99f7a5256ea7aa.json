{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tommay76/webdev/personal/portfolio/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Child from './element';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nfunction App() {\n  _s();\n\n  const [names, setNames] = useState([]);\n  const [newName, setNewName] = useState('');\n\n  const addName = name => {\n    if (name !== '' && !names.includes(name)) setNames(prev => [...prev, name]);\n    setNewName('');\n  };\n\n  const removeName = name => {\n    setNames(prev => prev.filter(i => i !== name));\n  };\n\n  useEffect(() => {\n    console.log('name added.', newName);\n  }, [names]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center',\n        background: 'orange'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"white\"\n        },\n        children: \"Name Adder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        type: \"text\",\n        helperText: \"Yoooo\",\n        value: newName,\n        onChange: event => setNewName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addName(newName),\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"Add name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: names.map((name, index) => {\n          return /*#__PURE__*/_jsxDEV(Child, {\n            name: name,\n            remove: removeName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 22\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YipqJdawidjIcEMtHJjT+xmvUj4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/tommay76/webdev/personal/portfolio/src/App.js"],"names":["React","useEffect","useState","Child","Button","TextField","App","names","setNames","newName","setNewName","addName","name","includes","prev","removeName","filter","i","console","log","padding","textAlign","background","color","event","target","value","map","index"],"mappings":";;;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,WAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAGA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAI,EAAJ,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMS,OAAO,GAAIC,IAAD,IAAU;AACxB,QAAIA,IAAI,KAAK,EAAT,IAAe,CAACL,KAAK,CAACM,QAAN,CAAeD,IAAf,CAApB,EAA0CJ,QAAQ,CAACM,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAASF,IAAT,CAAT,CAAR;AAC1CF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAHD;;AAKA,QAAMK,UAAU,GAAIH,IAAD,IAAU;AAC3BJ,IAAAA,QAAQ,CAACM,IAAI,IAAIA,IAAI,CAACE,MAAL,CAAaC,CAAD,IAAOA,CAAC,KAAKL,IAAzB,CAAT,CAAR;AACD,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAI;AACZiB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BV,OAA3B;AACD,GAFQ,EAEN,CAACF,KAAD,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAK,MAAA,KAAK,EAAE;AAACa,QAAAA,OAAO,EAAC,MAAT;AAAgBC,QAAAA,SAAS,EAAC,QAA1B;AAAmCC,QAAAA,UAAU,EAAC;AAA9C,OAAZ;AAAA,6BAEE;AAAI,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC;AAAP,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAK,MAAA,KAAK,EAAE;AAACH,QAAAA,OAAO,EAAC,MAAT;AAAgBC,QAAAA,SAAS,EAAC;AAA1B,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEI,QAAC,SAAD;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,UAAU,EAAC,OAHb;AAIE,QAAA,KAAK,EAAEZ,OAJT;AAKE,QAAA,QAAQ,EAAEe,KAAK,IAAId,UAAU,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd;AAL/B;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAI,MAAMf,OAAO,CAACF,OAAD,CAAhC;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,OAAO,EAAC,WAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAeI;AAAA,kBACGF,KAAK,CAACoB,GAAN,CAAW,CAACf,IAAD,EAAMgB,KAAN,KAAgB;AAC1B,8BAAO,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEhB,IAAb;AAAmB,YAAA,MAAM,EAAEG;AAA3B,aAA4Ca,KAA5C;AAAA;AAAA;AAAA;AAAA,kBAAP;AACC,SAFF;AADH;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8BD;;GAhDQtB,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Child from './element'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\n\n\nfunction App() {\n\n  const [names, setNames] = useState(   []  );\n  const [newName, setNewName] = useState('')\n\n  const addName = (name) => {\n    if (name !== '' && !names.includes(name)) setNames(prev => [...prev,name]);\n    setNewName('');\n  }\n\n  const removeName = (name) => {\n    setNames(prev => prev.filter((i) => i !== name))\n  }\n\n  useEffect(()=>{\n    console.log('name added.', newName)\n  }, [names]);\n\n  return (\n    <div>\n      <div style={{padding:'20px',textAlign:'center',background:'orange'}}>\n\n        <h1 style={{color:\"white\"}}>Name Adder</h1>\n      </div>\n      <div style={{padding:'20px',textAlign:'center'}}>\n        <h3>Add a name:</h3>\n          <TextField \n            \n            type='text' \n            helperText='Yoooo'\n            value={newName}\n            onChange={event => setNewName(event.target.value)}/>\n          \n          <Button onClick= { () => addName(newName) }\n            color='primary'\n            variant='contained'\n          >\n            Add name\n          </Button>\n          <div>\n            {names.map( (name,index) => {\n              return <Child name={name} remove={removeName} key={index}/>\n              })\n            }\n          </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
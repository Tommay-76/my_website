{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tommay76/webdev/personal/portfolio/src/pages/NameAdder.js\",\n    _s = $RefreshSig$();\n\nimport '../css/App.css';\nimport React, { useEffect, useState } from 'react';\nimport Child from '../components/element';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nfunction NameAdder() {\n  _s();\n\n  const [names, setNames] = useState([]);\n  const [newName, setNewName] = useState('');\n\n  const addName = name => {\n    if (name !== '' && !names.includes(name)) setNames(prev => [...prev, name]);\n    setNewName('');\n  };\n\n  const removeName = name => {\n    setNames(prev => prev.filter(i => i !== name));\n  };\n\n  useEffect(() => {\n    console.log('name added.', newName);\n  }, [names, newName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center',\n        background: 'orange'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        children: \"Name Adder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Add a name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Name\",\n        type: \"text\",\n        value: newName,\n        onChange: event => setNewName(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addName(newName),\n        color: \"primary\",\n        variant: \"contained\",\n        children: \"Add name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: names.map((name, index) => {\n          return /*#__PURE__*/_jsxDEV(Child, {\n            name: name,\n            remove: removeName\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NameAdder, \"YipqJdawidjIcEMtHJjT+xmvUj4=\");\n\n_c = NameAdder;\nexport default NameAdder;\n\nvar _c;\n\n$RefreshReg$(_c, \"NameAdder\");","map":{"version":3,"sources":["/home/tommay76/webdev/personal/portfolio/src/pages/NameAdder.js"],"names":["React","useEffect","useState","Child","Button","TextField","NameAdder","names","setNames","newName","setNewName","addName","name","includes","prev","removeName","filter","i","console","log","padding","textAlign","background","color","event","target","value","map","index"],"mappings":";;;;;AAAA,OAAO,gBAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;;AAEA,SAASC,SAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMS,OAAO,GAAGC,IAAI,IAAI;AACtB,QAAIA,IAAI,KAAK,EAAT,IAAe,CAACL,KAAK,CAACM,QAAN,CAAeD,IAAf,CAApB,EAA0CJ,QAAQ,CAACM,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUF,IAAV,CAAT,CAAR;AAC1CF,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAHD;;AAKA,QAAMK,UAAU,GAAGH,IAAI,IAAI;AACzBJ,IAAAA,QAAQ,CAACM,IAAI,IAAIA,IAAI,CAACE,MAAL,CAAYC,CAAC,IAAIA,CAAC,KAAKL,IAAvB,CAAT,CAAR;AACD,GAFD;;AAIAX,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BV,OAA3B;AACD,GAFQ,EAEN,CAACF,KAAD,EAAQE,OAAR,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AACE,MAAA,KAAK,EAAE;AAAEW,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,SAAS,EAAE,QAA9B;AAAwCC,QAAAA,UAAU,EAAE;AAApD,OADT;AAAA,6BAGE;AAAI,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,KAAK,EAAE;AAAEH,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,SAAS,EAAE;AAA9B,OAAZ;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAEZ,OAHT;AAIE,QAAA,QAAQ,EAAEe,KAAK,IAAId,UAAU,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd;AAJ/B;AAAA;AAAA;AAAA;AAAA,cAFF,eASE,QAAC,MAAD;AACE,QAAA,OAAO,EAAE,MAAMf,OAAO,CAACF,OAAD,CADxB;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAC,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE;AAAA,kBACGF,KAAK,CAACoB,GAAN,CAAU,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AAC1B,8BAAO,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEhB,IAAb;AAAmB,YAAA,MAAM,EAAEG;AAA3B,aAA4Ca,KAA5C;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GAhDQtB,S;;KAAAA,S;AAkDT,eAAeA,SAAf","sourcesContent":["import '../css/App.css'\nimport React, { useEffect, useState } from 'react'\nimport Child from '../components/element'\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\n\nfunction NameAdder () {\n  const [names, setNames] = useState([])\n  const [newName, setNewName] = useState('')\n\n  const addName = name => {\n    if (name !== '' && !names.includes(name)) setNames(prev => [...prev, name])\n    setNewName('')\n  }\n\n  const removeName = name => {\n    setNames(prev => prev.filter(i => i !== name))\n  }\n\n  useEffect(() => {\n    console.log('name added.', newName)\n  }, [names, newName])\n\n  return (\n    <div>\n      <div\n        style={{ padding: '20px', textAlign: 'center', background: 'orange' }}\n      >\n        <h1 style={{ color: 'white' }}>Name Adder</h1>\n      </div>\n      <div style={{ padding: '20px', textAlign: 'center' }}>\n        <h3>Add a name:</h3>\n        <TextField\n          label='Name'\n          type='text'\n          value={newName}\n          onChange={event => setNewName(event.target.value)}\n        />\n\n        <Button\n          onClick={() => addName(newName)}\n          color='primary'\n          variant='contained'\n        >\n          Add name\n        </Button>\n        <div>\n          {names.map((name, index) => {\n            return <Child name={name} remove={removeName} key={index} />\n          })}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NameAdder\n"]},"metadata":{},"sourceType":"module"}
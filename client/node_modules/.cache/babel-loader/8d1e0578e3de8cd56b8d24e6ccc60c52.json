{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/tommay76/webdev/personal/portfolio/src/pages/FilmFinder.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react'; // images\n\nimport homepage from '../images/projects/filmFinderPage/homepage.png';\nimport moviepage from '../images/projects/filmFinderPage/moviepage.png';\nimport profilepage from '../images/projects/filmFinderPage/profilepage.png';\nimport searchpage from '../images/projects/filmFinderPage/search.png';\nimport settingspage from '../images/projects/filmFinderPage/settingspage.png';\nimport lightmodehome from '../images/projects/filmFinderPage/lightmodehome.png';\nimport lightmodesearch from '../images/projects/filmFinderPage/lightmodesearch.png';\nimport BackToTopButton from '../components/BackToTopButton';\nimport ProjectsBlock from '../components/ProjectsBlock';\nimport ImageGrid from '../components/ImageGrid';\nimport Modal from '../components/Modal';\n\nfunction FilmFinder() {\n  _s();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const images = [homepage, moviepage, profilepage, searchpage, settingspage, lightmodehome, lightmodesearch];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filmFinderBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Film Finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filmFinderBanner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Written in: JavaScript ( MongoDB | Express | React | Node )\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A university project written by myself and four other students. It was written on a MERN framework (MongoDB, Express, React, Node). Whilst we all contributed to multiple backend and database code, I was mainly working on the frontend. The site utilizes Material UI, has a togglable dark mode, and is mobile friendly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Due to plaigirism rules, I cannot show the code publicly, but send me a message, and I'll be happy to chat about it.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Library\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ImageGrid, {\n          setSelectedImage: setSelectedImage,\n          images: images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentBlock\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Other Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"projectsBlock\",\n          children: projects.length !== 0 && projects.map(project => /*#__PURE__*/_jsxDEV(ProjectButton, {\n            title: project.title,\n            link: project.link,\n            image: project.image\n          }, project.title + 'button', false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BackToTopButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), selectedImage && /*#__PURE__*/_jsxDEV(Modal, {\n      selectedImage: selectedImage,\n      setSelectedImage: setSelectedImage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilmFinder, \"dJ24RYRxcxZHTsms7CTvxCuHqb0=\");\n\n_c = FilmFinder;\nexport default FilmFinder;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilmFinder\");","map":{"version":3,"sources":["/home/tommay76/webdev/personal/portfolio/src/pages/FilmFinder.jsx"],"names":["React","useEffect","useState","homepage","moviepage","profilepage","searchpage","settingspage","lightmodehome","lightmodesearch","BackToTopButton","ProjectsBlock","ImageGrid","Modal","FilmFinder","window","scrollTo","selectedImage","setSelectedImage","images","projects","length","map","project","title","link","image"],"mappings":";;;;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,OAAOC,SAAP,MAAsB,iDAAtB;AACA,OAAOC,WAAP,MAAwB,mDAAxB;AACA,OAAOC,UAAP,MAAuB,8CAAvB;AACA,OAAOC,YAAP,MAAyB,oDAAzB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,eAAP,MAA4B,uDAA5B;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AAGA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;AAEA,SAASC,UAAT,GAAuB;AAAA;;AACrBb,EAAAA,SAAS,CAAC,MAAM;AACdc,IAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,CAAC,IAAD,CAAlD;AACA,QAAMiB,MAAM,GAAG,CAAChB,QAAD,EAAWC,SAAX,EAAsBC,WAAtB,EAAmCC,UAAnC,EAA+CC,YAA/C,EAA6DC,aAA7D,EAA4EC,eAA5E,CAAf;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAiBE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,gBAAgB,EAAES,gBAA7B;AAA+C,UAAA,MAAM,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF,eAqBE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,oBACGC,QAAQ,CAACC,MAAT,KAAoB,CAApB,IACCD,QAAQ,CAACE,GAAT,CAAcC,OAAD,iBACX,QAAC,aAAD;AACE,YAAA,KAAK,EAAEA,OAAO,CAACC,KADjB;AAEE,YAAA,IAAI,EAAED,OAAO,CAACE,IAFhB;AAGE,YAAA,KAAK,EAAEF,OAAO,CAACG;AAHjB,aAIOH,OAAO,CAACC,KAAR,GAAgB,QAJvB;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cArBF,eAoCE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAuCGP,aAAa,iBACZ,QAAC,KAAD;AAAO,MAAA,aAAa,EAAEA,aAAtB;AAAqC,MAAA,gBAAgB,EAAEC;AAAvD;AAAA;AAAA;AAAA;AAAA,YAxCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD;;GApDQJ,U;;KAAAA,U;AAqDT,eAAeA,UAAf","sourcesContent":["import { React, useEffect, useState } from 'react'\n// images\nimport homepage from '../images/projects/filmFinderPage/homepage.png'\nimport moviepage from '../images/projects/filmFinderPage/moviepage.png'\nimport profilepage from '../images/projects/filmFinderPage/profilepage.png'\nimport searchpage from '../images/projects/filmFinderPage/search.png'\nimport settingspage from '../images/projects/filmFinderPage/settingspage.png'\nimport lightmodehome from '../images/projects/filmFinderPage/lightmodehome.png'\nimport lightmodesearch from '../images/projects/filmFinderPage/lightmodesearch.png'\n\nimport BackToTopButton from '../components/BackToTopButton'\nimport ProjectsBlock from '../components/ProjectsBlock'\n\n\nimport ImageGrid from '../components/ImageGrid'\nimport Modal from '../components/Modal'\n\nfunction FilmFinder () {\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n  const [selectedImage, setSelectedImage] = useState(null)\n  const images = [homepage, moviepage, profilepage, searchpage, settingspage, lightmodehome, lightmodesearch]\n\n  return (\n    <div>\n      <div className='filmFinderBody'>\n        <h1>Film Finder</h1>\n        <div className='filmFinderBanner' />\n        <div className='contentBlock'>\n          <h3>Written in: JavaScript ( MongoDB | Express | React | Node )</h3>\n          <p>\n            A university project written by myself and four other students. It\n            was written on a MERN framework (MongoDB, Express, React, Node).\n            Whilst we all contributed to multiple backend and database code, I\n            was mainly working on the frontend. The site utilizes Material UI,\n            has a togglable dark mode, and is mobile friendly.\n          </p>\n          <p>\n            Due to plaigirism rules, I cannot show the code publicly, but send\n            me a message, and I'll be happy to chat about it.\n          </p>\n        </div>\n        <div className='contentBlock'>\n          <h3>Library</h3>\n          <ImageGrid setSelectedImage={setSelectedImage} images={images} />\n        </div>\n        <div className='contentBlock'>\n          <h3>Other Projects</h3>\n          <div className='projectsBlock'>\n            {projects.length !== 0 && (\n              projects.map((project) => (\n                <ProjectButton\n                  title={project.title}\n                  link={project.link}\n                  image={project.image}\n                  key={project.title + 'button'}\n                />\n              ))\n            )}\n          </div>\n        </div>\n        <BackToTopButton />\n      </div>\n      {selectedImage && (\n        <Modal selectedImage={selectedImage} setSelectedImage={setSelectedImage} />\n      )}\n    </div>\n  )\n}\nexport default FilmFinder\n"]},"metadata":{},"sourceType":"module"}